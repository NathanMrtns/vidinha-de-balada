library("RMySQL")
banco = dbConnect(MySQL(), user='root', password='jandira', dbname='sagres', host='localhost')
dbListTables(banco)
licitacao = dbSendQuery(banco, 'select * from licitacao')
dados = fetch(licitacao, n=-1)
ugestora = dbSendQuery(banco, 'select * from codigo_ugestora')
empenhos = dbSendQuery(banco, 'select * from empenhos')
empenhos = dbSendQuery(banco, 'select * from empenhos')
u.gestora = fetch(ugestora, n=-1)
d.empenhos = fetch(ugestora, n=-1)
library("RMySQL")
banco = dbConnect(MySQL(), user='root', password='jandira', dbname='sagres', host='localhost')
dbListTables(banco)
licitacao = dbSendQuery(banco, 'select * from licitacao')
ugestora = dbSendQuery(banco, 'select * from codigo_ugestora')
ugestora = dbSendQuery(banco, 'select * from codigo_ugestora')
d.licitacao = fetch(licitacao, n=-1)
ugestora = dbSendQuery(banco, 'select * from codigo_ugestora')
u.gestora = fetch(ugestora, n=-1)
empenhos = dbSendQuery(banco, 'select * from empenhos')
d.empenhos = fetch(ugestora, n=-1)
d.empenhos = fetch(empenhos, n=-1)
View(d.licitacao)
sum(d.licitacao$vl_Licitacao)
sum(d.licitacao$vl_Licitacao, na.rm = T)
View(u.gestora)
setwd("~/Imagens")
setwd("~/Imagens")
getwd()
getwd()
setwd("~/.gimp-2.8")
setwd("~/")
getwd()
![](/Imagens/skew2.png)
setwd("~/")
knitr::opts_chunk$set(echo = TRUE, message = FALSE)
library(ggplot2)
library(dplyr)
library(tidyr)
library(RMySQL)
banco = dbConnect(MySQL(), user='root', password='m1n1st3r10', dbname='sagres', host='150.165.85.32', port=3306)
# banco = dbConnect(MySQL(), user='root', password='jandira', dbname='sagres', host='localhost')
# dbListTables(banco)
fornecedores = dbSendQuery(banco, 'select distinct(nu_CPFCNPJ), no_Fornecedor from fornecedores')
setwd("~/workspace/mppb/mestrado/notebooks")
fornecedores = fetch(fornecedores, n=-1)
empenhos = dbSendQuery(banco, 'select distinct(cd_Credor), no_Credor from empenhos')
empenhos = fetch(empenhos, n=-1)
# dbDisconnect(banco)
str(fornecedores)
ceis.abril <- read.csv("../../dados/20170424_CEIS.csv", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1", sep = ";")
colnames(ceis.abril) <- c("TipoPessoa", "CpfCnpjSancionado", "NomeInfOrgaoSancionador", "RazaoSocialReceita",
"NomeFantasiaReceita", "NumProcesso", "TipoSancao", "DataInicioSancao", "DataFinalSancao",
"OrgaoSancionador", "UfOrgaoSanc", "OrigemInfo", "DataOrigemInfo", "DataPubli", "Publicacao",
"Detalhamento", "AbrangenciaDefDecisaoJudi", "FundamentacaoLegal", "DescricaoFundament",
"DataTransitoJulgado", "ComplementoOrgao", "ContatoOrigemInfo")
ceis.maio <- read.csv("../../dados/20170518_CEIS.csv", header=TRUE, stringsAsFactors=FALSE, fileEncoding="latin1", sep = ";")
colnames(ceis.maio) <- c("TipoPessoa", "CpfCnpjSancionado", "NomeInfOrgaoSancionador", "RazaoSocialReceita",
"NomeFantasiaReceita", "NumProcesso", "TipoSancao", "DataInicioSancao", "DataFinalSancao",
"OrgaoSancionador", "UfOrgaoSanc", "OrigemInfo", "DataOrigemInfo", "DataPubli", "Publicacao",
"Detalhamento", "AbrangenciaDefDecisaoJudi", "FundamentacaoLegal", "DescricaoFundament",
"DataTransitoJulgado", "ComplementoOrgao", "ContatoOrigemInfo")
scabril <- merge(ceis.abril, fornecedores, by.x = "CpfCnpjSancionado", by.y = "nu_CPFCNPJ")
scmaio <- merge(ceis.maio, fornecedores, by.x = "CpfCnpjSancionado", by.y = "nu_CPFCNPJ")
# teste <- merge(empenhos, fornecedores, by.x = "cd_Credor", by.y = "nu_CPFCNPJ")
unicasabril <- scabril %>%
select(CpfCnpjSancionado, NomeInfOrgaoSancionador, NomeFantasiaReceita, TipoPessoa) %>%
distinct()
unicasmaio <- scmaio %>%
select(CpfCnpjSancionado, NomeInfOrgaoSancionador, NomeFantasiaReceita, TipoPessoa) %>%
distinct()
save.image("~/workspace/mppb/sagresceis.RData")
View(unicasabril)
View(ceis.maio)
rm(unicasmaio, ceis.maio, scmaio)
View(scabril)
View(scabril)
View(scabril)
View(unicasabril)
View(unicasabril)
banco = dbConnect(MySQL(), user='hackfest', password='H@ckfest', dbname='sagres', host='150.165.85.32', port=3306)
banco = dbConnect(MySQL(), user='hackfest', password='H@ckfest', dbname='sagres', host='150.165.85.32', port=3306)
setwd("~/workspace/vidinha-de-balada/script")
source("formata_dados.R")
source("prepara_gastos.R")
options(scipen = 50)
library(readr)
dados_gastos = cria_data_frame_2015_2017() %>% filter(nuLegislatura > 2014, !is.na(numMes), !is.na(numAno))
cotas = read_csv("../data/final/cota_por_estado.csv")
#votacoes = read_csv("../data/final/votacoes2.csv")
votacoes = read_csv("https://raw.githubusercontent.com/nazareno/dados-da-camara-federal/master/dados/votacoes.csv") %>%
formata_data_votacoes()
#emendas = le_csv_zip("http://portal.convenios.gov.br/images/docs/CGSIS/csv/siconv_emenda.csv.zip", "siconv_emenda.csv")
twitter_profiles = read_csv("../data/final/twitter_profiles.csv")
info_deputados = read_csv("../data/final/infodeputados.csv")
# esse csv não gera nenhuma tabela no bd
tabela_final_gastos = cria_tabela_final_gastos(dados_gastos)
# write.csv(tabela_final_gastos, "tabela_final_gastos.csv", row.names = F)
# tabela_final_categoria = cria_tabela_final_categoria(dados_gastos)
# write.csv(tabela_final_categoria, "tabela_final_categoria.csv", row.names = F)
# tabela_gastos_presenca = cria_tabela_gastos_presenca(tabela_final_votacoes, tabela_final_gastos)
# write.csv(tabela_gastos_presenca, "tabela_gastos_presenca.csv", row.names = F)
# esse csv não gera nenhuma tabela no bd
# tabela_gasto_total_anos = cria_tabela_gasto_total_anos(tabela_final_gastos)
# write.csv(tabela_gasto_total_anos, "tabela_gasto_total_anos.csv", row.names = F)
# tabela_6_gastos = cria_tabela_6_gastos(dados_gastos)
# write.csv(tabela_6_gastos, "tabela_6_gastos.csv", row.names = F)
# esse csv não gera nenhuma tabela no bd
tabela_6_gastos_mensal = cria_tabela_6_gastos_mensal(dados_gastos, tabela_final_gastos)
# write.csv(tabela_6_gastos_mensal, "tabela_6_gastos_mensal.csv", row.names = F)
# top_estourados = cria_top_estourados(tabela_final_gastos)
# write.csv(top_estourados, "top_estourados.csv", row.names = F)
# for(i in 1:NROW(cotas)){
#   temp = cria_top_estourados_estado(cotas$sgUF[i], tabela_final_gastos)
#
#   uf = cotas$sgUF[i]
#   write.csv(temp, paste("top_10_estourados_", uf, ".csv", sep=""), row.names = F)
# }
tabela_final_votacoes = cria_tabela_final_votacoes(votacoes)
write.csv(tabela_final_votacoes, "tabela_final_votacoes.csv", row.names = F)
sessoes_mensal = cria_sessoes_mensal(votacoes)
write.csv(sessoes_mensal, "sessoes_mensal.csv", row.names = F)
empresas = cria_empresas(dados_gastos)
write.csv(empresas, "empresas.csv", row.names = F)
tabela_gastos_empresas = cria_tabela_gastos_empresas(dados_gastos, empresas)
write.csv(tabela_gastos_empresas, "tabela_gastos_empresas.csv", row.names = F)
tabela_info_deputados = cria_tabela_info_deputados(info_deputados, twitter_profiles, dados_gastos)
write.csv(tabela_info_deputados, "tabela_info_deputados.csv", row.names = F)
ganhadores_selos = cria_ganhadores_selos(tabela_6_gastos_mensal, tabela_final_gastos)
write.csv(ganhadores_selos, "ganhadores_selos.csv", row.names = F)
rm(tabela_info_deputados, tabela_gastos_empresas, empresas, sessoes_mensal,tabela_final_votacoes)
#rm(tabela_6_gastos_mensal, tabela_final_gastos, tabela_gasto_total_anos, tabela_info_pessoais,twitter_profiles, dados_gastos, info_deputados, votacoes)
source("formata_dados.R")
source("prepara_gastos.R")
options(scipen = 50)
library(readr)
dados_gastos = cria_data_frame_2015_2017() %>% filter(nuLegislatura > 2014, !is.na(numMes), !is.na(numAno))
getwd()
source("formata_dados.R")
source("prepara_gastos.R")
options(scipen = 50)
library(readr)
dados_gastos = cria_data_frame_2015_2017() %>% filter(nuLegislatura > 2014, !is.na(numMes), !is.na(numAno))
cotas = read_csv("../data/final/cota_por_estado.csv")
#votacoes = read_csv("../data/final/votacoes2.csv")
votacoes = read_csv("https://raw.githubusercontent.com/nazareno/dados-da-camara-federal/master/dados/votacoes.csv") %>%
formata_data_votacoes()
#emendas = le_csv_zip("http://portal.convenios.gov.br/images/docs/CGSIS/csv/siconv_emenda.csv.zip", "siconv_emenda.csv")
twitter_profiles = read_csv("../data/final/twitter_profiles.csv")
info_deputados = read_csv("../data/final/infodeputados.csv")
# esse csv não gera nenhuma tabela no bd
tabela_final_gastos = cria_tabela_final_gastos(dados_gastos)
# write.csv(tabela_final_gastos, "tabela_final_gastos.csv", row.names = F)
# tabela_final_categoria = cria_tabela_final_categoria(dados_gastos)
# write.csv(tabela_final_categoria, "tabela_final_categoria.csv", row.names = F)
# tabela_gastos_presenca = cria_tabela_gastos_presenca(tabela_final_votacoes, tabela_final_gastos)
# write.csv(tabela_gastos_presenca, "tabela_gastos_presenca.csv", row.names = F)
# esse csv não gera nenhuma tabela no bd
# tabela_gasto_total_anos = cria_tabela_gasto_total_anos(tabela_final_gastos)
# write.csv(tabela_gasto_total_anos, "tabela_gasto_total_anos.csv", row.names = F)
# tabela_6_gastos = cria_tabela_6_gastos(dados_gastos)
# write.csv(tabela_6_gastos, "tabela_6_gastos.csv", row.names = F)
# esse csv não gera nenhuma tabela no bd
tabela_6_gastos_mensal = cria_tabela_6_gastos_mensal(dados_gastos, tabela_final_gastos)
# write.csv(tabela_6_gastos_mensal, "tabela_6_gastos_mensal.csv", row.names = F)
# top_estourados = cria_top_estourados(tabela_final_gastos)
# write.csv(top_estourados, "top_estourados.csv", row.names = F)
# for(i in 1:NROW(cotas)){
#   temp = cria_top_estourados_estado(cotas$sgUF[i], tabela_final_gastos)
#
#   uf = cotas$sgUF[i]
#   write.csv(temp, paste("top_10_estourados_", uf, ".csv", sep=""), row.names = F)
# }
tabela_final_votacoes = cria_tabela_final_votacoes(votacoes)
write.csv(tabela_final_votacoes, "/dados_gerados/tabela_final_votacoes.csv", row.names = F, col.names = F)
sessoes_mensal = cria_sessoes_mensal(votacoes)
write.csv(sessoes_mensal, "/dados_gerados/sessoes_mensal.csv", row.names = F, col.names = F)
empresas = cria_empresas(dados_gastos)
write.csv(empresas, "/dados_gerados/empresas.csv", row.names = F, col.names = F)
tabela_gastos_empresas = cria_tabela_gastos_empresas(dados_gastos, empresas)
write.csv(tabela_gastos_empresas, "/dados_gerados/tabela_gastos_empresas.csv", row.names = F, col.names = F)
tabela_info_deputados = cria_tabela_info_deputados(info_deputados, twitter_profiles, dados_gastos)
write.csv(tabela_info_deputados, "/dados_gerados/tabela_info_deputados.csv", row.names = F, col.names = F)
ganhadores_selos = cria_ganhadores_selos(tabela_6_gastos_mensal, tabela_final_gastos)
write.csv(ganhadores_selos, "/dados_gerados/ganhadores_selos.csv", row.names = F, col.names = F)
#rm(tabela_info_deputados, tabela_gastos_empresas, empresas, sessoes_mensal,tabela_final_votacoes)
#rm(tabela_6_gastos_mensal, tabela_final_gastos, tabela_gasto_total_anos, tabela_info_pessoais,twitter_profiles, dados_gastos, info_deputados, votacoes)
getwd()
